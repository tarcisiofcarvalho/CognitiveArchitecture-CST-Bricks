//apply plugin: 'java-library-distribution'
apply plugin: 'application'

sourceCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.
if (!hasProperty('mainClass')) {
    ext.mainClass = 'ExperimentMain'
}
//create a single Jar with all dependencies
//task fatJar(type: Jar) {
//	manifest {
//        attributes ('Main-Class': 'ExperimentMain')
//    }
//    baseName = project.name + '-all'
//    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
//    with jar
//}
jar{
    manifest{
        attributes(
            "Main-Class": "ExperimentMain",
            "Class-Path": configurations.runtime.files.collect {"$it.name"}.join(' ')
        )
    }    
        
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    // You may define additional repositories, or even remove "mavenCentral()".
    // Read more about repositories here:
    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:repositories
}

dependencies {
    // TODO: Add dependencies here ...
    // You can read more about how to add dependency here:
    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:how_to_declare_your_dependencies
    implementation fileTree(dir: 'lib', include: ['*.jar'])
    implementation 'com.github.CST-Group:cst:0.2.4'
    implementation 'org.json:json:20180813'
    
    //implementation fileTree(dir: 'lib', include: ['*.jar'])
    //implementation 'com.github.CST-Group:cst:0.2.4'
    //implementation 'org.json:json:20180813'
    testCompile group: 'junit', name: 'junit', version: '4.10'
}
